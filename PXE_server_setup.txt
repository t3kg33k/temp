# Original article: https://www.golinuxcloud.com/configure-kickstart-pxe-boot-server-linux/
# Original article configures NFS for sharing RHEL 8 media. Below example uses web server.

Pre-Requestites: RHEL 8 based distro, no existing DHCP server, RHEL 8 based distro .ISO, access to the distro repo

1. Install Web server

	dnf install httpd -y

2. Install DHCP server

	dnf install dhcp-server -y

3. Install tftp server

	dnf install tftp-server xinetd -y

4. Enable and start the services

	systemctl enable --now dhcpd

	systemctl enable --now httpd

	systemctl enable --now tftp

5. Mount RHEL 8 iso and copy contents to local directory

	mkdir -p /mnt/dvd
	mount -o loop rhel-8.5-x86_64-dvd.iso /mnt/dvd/
	mkdir -p /var/www/html/rheldvd
	cp -r /mnt/dvd/* /var/www/html/rheldvd/
	cp -apr /mnt/dvd/.discinfo /mnt/dvd/.treeinfo /var/www/html/rheldvd/

6. Customize tftp directory

	mkdir -p /var/lib/tftpboot/pxelinux
	cp /mnt/dvd/BaseOS/Packages/syslinux-tftpboot-6.04-5.el8.noarch.rpm /tmp
	cd /tmp/
	rpm2cpio syslinux-tftpboot-6.04-5.el8.noarch.rpm | cpio -idm
	cd tftpboot/
	cp pxelinux.0 /var/lib/tftpboot/pxelinux/
	cp ldlinux.c32 /var/lib/tftpboot/pxelinux/
	cd /mnt/dvd/isolinux/
	cp initrd.img /var/lib/tftpboot/pxelinux/
	cp vmlinuz /var/lib/tftpboot/pxelinux/
	
7. Create custom boot menu.

	cd /var/lib/tftpboot/pxelinux/
	touch boot.msg
	vim boot.msg
	
Add the following. Customization this message to fit your preference:

Welcome to the installation of "My Linux Server" !
Red Hat Enterprise Linux 8 (x86_64)
Version: 1.0
Architecture: x86_64

To start the installation enter :
    '1', '2' and press .

Available boot options:

  1 - Install Red Hat Enterprise Linux 8.1
  2 - Boot from Harddisk (this is default)

8. Continue to customize the tftp directory

	mkdir pxelinux.cfg
	cd pxelinux.cfg/
	vim default

Add the following. Customization this message to fit your preference:

timeout 600
display boot.msg
default 1
prompt  1

label 1
  menu label ^Install Red Hat Enterprise Linux 8
  kernel vmlinuz
  append initrd=initrd.img showopts inst.ks=http://<web_server_IP>/ks.cfg ip=dhcp net.ifnames=0 biosdevname=0

label 2
  menu label Boot from ^local drive
  localboot 0x80

menu end

9. Edit (vim /etc/dhcp/dhcpd.conf) DHCP config with the following:

allow bootp;
allow booting;
max-lease-time 1200;
default-lease-time 900;
log-facility local7;

option ip-forwarding    false;
option mask-supplier    false;

   subnet 192.168.x.0 netmask 255.255.255.0 {

       option  routers   192.168.x.1; # Router IP
       option  domain-name-servers  127.0.0.1; # DNS server
       range 192.168.x.100 192.168.x.120; # Network range
       next-server 192.168.x.2; # Next DHCP server; can be the primary
       filename "pxelinux/pxelinux.0";
   }

and restart DHCP server:

	systemctl restart dhcpd

10. Create a Kickstart file to be placed in the web server directory. The contents can look similar to this:

#version=RHEL8
# Kickstart file used for VMs in KVM/libvirt
# Use text mode install
text

#repo --name="AppStream" --baseurl=file:///run/install/sources/mount-0000-cdrom/AppStream
url --url=http://<web_server_IP>/rheldvd

%packages
@^minimal-environment
@standard
kexec-tools
%end

# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp --device=enp1s0 --noipv6 --activate --onboot=on

# Use CDROM installation media
#cdrom

# Run the Setup Agent on first boot
firstboot --disable

# Do not configure the X Window System
skipx

ignoredisk --only-use=vda

# System bootloader configuration. vda indicates virtual machine drive. physical may be sda
bootloader --append="crashkernel=auto" --location=mbr --boot-drive=vda

autopart

# Partition clearing information. vda indicates virtual machine drive. physical may be sda
clearpart --all --initlabel --drives=vda

# Intended system purpose
syspurpose --role="Red Hat Enterprise Linux Server" --sla="Self-Support" --usage="Development/Test"

# System timezone
timezone America/New_York --isUtc

# Disable SELinux
selinux --disabled

# Disable firewall
firewall --disabled

# Root password. Use openssl passwd -6 to generate an encrypted password
rootpw --iscrypted <encrypted password goes here>

# Create optional user
#user --groups=wheel --name=ed --password=<encrypted password goes here> --iscrypted --gecos="ed"

#reboot
shutdown

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end


%anaconda
pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok
pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty
%end